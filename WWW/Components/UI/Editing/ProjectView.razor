@namespace WWW.Components.UI
@implements IDisposable
@rendermode InteractiveServer

<div style="padding-left: 1rem; padding-bottom: 3rem;">
    <div>Project ID: @Id</div>
    
    <EditForm EditContext="EditContext" OnSubmit="@OnSubmit">
        <div>
            <InputText id="project-title" @bind-Value="@Project.Title"/>
        </div>

        <div>
            <MudButton Variant="Variant.Filled" Color="Color.Info" StartIcon="@Icons.Material.Filled.Save"
                       type="submit" OnClick="@OnSubmit">
                Submit
            </MudButton>
        </div>
    </EditForm>

    <MudButton Variant="Variant.Filled" OnClick="DeleteSelf" Disabled="@IsBeingDeleted" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete">
        @if (IsBeingDeleted)
        {
            <MudProgressCircular Style="margin-right: 0.5rem;" Size="Size.Small" Indeterminate="true"/>
            <MudText>Deleting</MudText>
        }
        else
        {
            <MudText>Delete Project</MudText>
        }
    </MudButton>

    <div>
        <h3>Goals</h3>
        <MudButton Variant="Variant.Filled" Color="Color.Warning" StartIcon="@Icons.Material.Filled.Create"
                   OnClick="NewGoal">
            New Goal
        </MudButton>

        <ol>
            @foreach (var goal in Project.Goals)
            {
                <li>
                    <GoalView Id="@goal.Id" @key="goal.Id" />
                </li>
            }
        </ol>
    </div>
</div>

@code
{
    public void NewGoal()
    {
        ViewService.NewGoal(Project);
    }
    
    public void OnSubmit()
    {
        ViewService.Db.SaveChanges();
        EditContext.MarkAsUnmodified();
        ViewService.RefreshView();
    }
    
    public void DeleteSelf()
    {
        if (IsBeingDeleted) return;
        
        IsBeingDeleted = true;
        StateHasChanged();
        
        ViewService.DeleteEntity(Project);
    }
}
